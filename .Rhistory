splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$colors<-cols
args$direction<-"rightwards"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
max(nodeHeights(anoletree))
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4)
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$colors<-cols
args$direction<-"rightwards"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
## I'm doing some weird stuff here in case we're
## cutting out a lot of our tree!
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4)
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
args$direction<-"rightwards"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
## I'm doing some weird stuff here in case we're
## cutting out a lot of our tree!
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4)
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$direction<-"rightwards"
args$color<-"grey"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
par(lty="dotted")
do.call(plot,args)
par(lty="solid")
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$direction<-"rightwards"
args$color<-"grey"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
par(lty="dotted")
do.call(plot,args)
par(lty="solid")
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
args$color<-NULL
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$direction<-"rightwards"
args$color<-"grey"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
par(lty="dotted")
do.call(plot,args)
par(lty="solid")
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
args$color<-NULL
args$add<-TRUE
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$x<-tt
args$direction<-"rightwards"
args$color<-"grey"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
par(lty="dotted")
do.call(plotTree,args)
par(lty="solid")
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
args$color<-NULL
args$add<-TRUE
do.call(plot,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
splitAxisTree<-function(tree,start,end,buffer=0.03,...){
tt<-make.era.map(tree,limits=c(0,start,end))
H<-max(nodeHeights(tree))
buffer<-buffer*(H-end+start)
scale<-setNames(c(1,buffer/(end-start),1),1:3)
tt$maps<-lapply(tt$maps,function(x,scale)
x*scale[names(x)],scale=scale)
tt$edge.length<-sapply(tt$maps,sum)
args<-list(...)
args$tree<-tt
args$direction<-"rightwards"
args$color<-"grey"
if(is.null(args$mar)) args$mar<-c(2.1,1.1,1.1,1.1)
if(is.null(args$ylim)) args$ylim<-c(0,Ntip(tt))
if(is.null(args$ftype)) args$ftype<-"i"
par(lty="dotted")
do.call(plotTree,args)
par(lty="solid")
cols<-setNames(c("black","transparent","black"),1:3)
args$colors<-cols
args$color<-NULL
args$add<-TRUE
do.call(plotSimmap,args)
markChanges(tt,setNames(rep("black",3),1:3))
labs<-pretty(c(0,max(nodeHeights(tt))),n=8)
labs<-seq(0,max(nodeHeights(tree)),by=labs[2]-labs[1])
labs<-labs[labs<max(nodeHeights(tree))]
at<-max(nodeHeights(tree))-labs
labs<-labs[-intersect(which(at>start),which(at<end))]
at<-at[-intersect(which(at>start),which(at<end))]
at[at>=end]<-at[at>=end]-(end-start)+buffer
axis(1,at=at,labels=labs,pos=0,cex.axis=0.8)
polygon(start+c(0,buffer,buffer,0),
0.5*mean(strheight(LETTERS))*c(-1,-1,1,1),
col=if(par()$bg=="transparent") "white" else
par()$bg,border=FALSE)
segments(start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(-1,-1),
start+c(0,buffer),
0.5*mean(strheight(LETTERS))*c(1,1),lwd=2)
}
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off")
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off",buffer=0.5)
library(phytools)
data(anoletree)
splitAxisTree(anoletree,2,4,ftype="off",buffer=0.5)
data(salamanders)
max(nodeHeights(salamanders))
plotTree(salamanders)
library(phytools)
data("salamanders")
splitAxisTree(salamanders,0,320,ftype="off",buffer=0.5)
library(phytools)
data("salamanders")
splitAxisTree(salamanders,0,320,ftype="off",buffer=0.5)
data("vertebrate.tree")
vertebrate.tree
?simSeq
?sim.Mk
genSeq(vertebrate.tree,l=20)
as.matrix(genSeq(vertebrate.tree,l=20))
unclass(as.matrix(genSeq(vertebrate.tree,l=20)))
unclass(as.matrix(genSeq(vertebrate.tree,l=20)))
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,7,10,11)])
plotTree(vertebrate.tree,direction="upwards")
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,10,11)])
unclass(as.matrix(genSeq(vertebrate.tree,l=20)))
plotTree(vertebrate.tree,direction="upwards")
plotTree(vertebrate.tree,direction="upwards")
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
plotTree(vertebrate.tree,direction="upwards")
plotTree(vertebrate.tree,direction="upwards",ftype="i")
unclass(as.character(genSeq(vertebrate.tree,l=20)))
dist(genSeq(vertebrate.tree,l=20))
dist.dna(genSeq(vertebrate.tree,l=20))
vertebrate.tree$edge.length
edgelabels(vertebrate.tree$edge.length)
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.05
edgelabels(vertebrate.tree$edge.length)
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.2
edgelabels(vertebrate.tree$edge.length)
dist.dna(genSeq(vertebrate.tree,l=20))
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.2
edgelabels(vertebrate.tree$edge.length)
dist.dna(genSeq(vertebrate.tree,l=20))
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.1
edgelabels(vertebrate.tree$edge.length)
dist.dna(genSeq(vertebrate.tree,l=20))
args(dist.dna)
dist.dna(genSeq(vertebrate.tree,l=20),model="JC")
dist.dna(genSeq(vertebrate.tree,l=20),model="raw")
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.05
edgelabels(vertebrate.tree$edge.length)
dist.dna(genSeq(vertebrate.tree,l=20),model="raw")
data("vertebrate.tree")
vertebrate.tree$tip.label
vertebrate.tree<-drop.tip(vertebrate.tree,vertebrate.tree$tip.label[c(1,2,3,6,7,10,11)])
vertebrate.tree$edge.length
plotTree(vertebrate.tree,direction="upwards",ftype="i")
vertebrate.tree$edge.length<-vertebrate.tree$edge.length/73.8*0.05
edgelabels(vertebrate.tree$edge.length)
dist.dna(genSeq(vertebrate.tree,l=20),model="raw")
plot(upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(UPGMA(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
dna
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
plot(phangorn::upgma(dist.dna(dna<-genSeq(vertebrate.tree,l=20),model="raw")))
dna
as.character(dna)
apply(as.character(dna),1,paste,collapse="")
dist.dna(dna)
dist.dna(dna,model="raw")
plot(upgma_tree<-phangorn::upgma(dist.dna(dna)),direction="upwards")
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna)),direction="upwards")
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna)),direction="upwards",ftype="i")
edgelabels(upgma_tree$edge.length,bg="white",cex=0.8)
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna,model="raw")),
direction="upwards",ftype="i")
edgelabels(upgma_tree$edge.length,bg="white",cex=0.8)
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna,model="raw")),
direction="upwards",ftype="i",frame="circle")
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna,model="raw")),
direction="upwards",ftype="i")
edgelabels(upgma_tree$edge.length,bg="white",cex=0.8,frame="circle")
D<-dist.dna(dna,model="raw")
D
0.1+0.075+0.05+0.125
as.matrix(D)
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna,model="raw")),
direction="upwards",ftype="i")
plotTree(upgma_tree<-phangorn::upgma(dist.dna(dna,model="raw")),
direction="upwards",ftype="i")
mean(c(0.25,0.4))
mean(c(0.25,0.4,0.35,0.4))
phytools::untangle
